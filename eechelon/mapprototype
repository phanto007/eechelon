<!DOCTYPE html>
<html>
  <head>
    <title>Showing pixel and tile coordinates</title>
    <meta name="viewport" content="initial-scale=1.0">
    <meta charset="utf-8">
    <style>
      /* Always set the map height explicitly to define the size of the div
       * element that contains the map. */
      #map {
        height: 100%;
      }
      /* Optional: Makes the sample page fill the window. */
      html, body {
        height: 100%;
        margin: 0;
        padding: 0;
      }
    </style>
  </head>
  <body>
    <div id="map"></div>
    <script>

var map;
var markers = [];
var latLng1;
var latLng2;
var count = 0;
var radius = 1 * 1000;


function initMap() {
  var directionsService = new google.maps.DirectionsService;
  var directionsDisplay = new google.maps.DirectionsRenderer;

  var center = {lat: 23.825, lng: 90.366};

  map = new google.maps.Map(document.getElementById('map'), {
    zoom: 15,
    center: center,
    mapTypeId: 'terrain'
  });
  directionsDisplay.setMap(map);

  if (navigator.geolocation) {
    navigator.geolocation.getCurrentPosition(function(position) {
      var pos = {
        lat: position.coords.latitude,
        lng: position.coords.longitude
      };
      map.setCenter(pos);
      center  = pos;
      
      
    });
  } else {
    alert("Permission denied.");

   
  }

  var cityCircle = new google.maps.Circle({
      strokeColor: '#8EEA02',
      strokeOpacity: 0.8,
      strokeWeight: 2,
      fillColor: '#DAF7A6',
      fillOpacity: 0.35,
      map: map,
      center: center,
      radius: radius
    });

google.maps.event.addListener(cityCircle , 'click', function(event) {
   if(count<1){
      deleteMarkers();
      addMarker(event.latLng, 'Drop');
      latLng1 = event.latLng;
      count = count + 1;
    }else if(count<2){
      addMarker(event.latLng, 'Pickup');
      latLng2 = event.latLng;
      count = count + 1;
    }else{
      calculateAndDisplayRoute(directionsService, directionsDisplay);
      count = 0;
      //deleteMarkers();

    }

});


  // This event listener will call addMarker() when the map is clicked.
  map.addListener('click', function(event) {
    alert("Need better rating to pick further distant jobs.");

  });

  
}

function calculateAndDisplayRoute(directionsService, directionsDisplay) {
  directionsService.route({
    origin: latLng1,
    destination: latLng2,
    travelMode: 'WALKING'
  }, function(response, status) {
    if (status === 'OK') {
      directionsDisplay.setDirections(response);
      directionsDisplay.setOptions( { suppressMarkers: true } );
    } else {
      window.alert('Directions request failed due to ' + status);
    }
  });
}


// Adds a marker to the map and push to the array.
function addMarker(location, label) {
  var marker = new google.maps.Marker({
    position: location,
    label: label,
    map: map
  });
  markers.push(marker);
}

// Sets the map on all markers in the array.
function setMapOnAll(map) {
  for (var i = 0; i < markers.length; i++) {
    markers[i].setMap(map);
  }
}

// Removes the markers from the map, but keeps them in the array.
function clearMarkers() {
  setMapOnAll(null);
}

// Shows any markers currently in the array.
function showMarkers() {
  setMapOnAll(map);
}

// Deletes all markers in the array by removing references to them.
function deleteMarkers() {
  clearMarkers();
  markers = [];
}
    </script>
    <script async defer
    src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAFSfWLCMeD_XidejU2qSYavKfVs5r3irE&callback=initMap">
    </script>
  </body>
</html>

